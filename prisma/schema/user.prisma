model User {
    id            String           @id @default(cuid())
    name          String
    preferredName String?
    email         String           @unique
    emailVerified DateTime?
    password      String?
    image         String?
    role          UserRole         @default(USER)
    accounts      Account[]
    preferences   UserPreferences?
    createdAt     DateTime         @default(now())
    updatedAt     DateTime         @updatedAt
}

model Account {
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
}

enum UserRole {
    USER
    ADMIN
}

model VerificationToken {
    id       String   @id @default(cuid())
    email    String
    token    String   @unique
    expires  DateTime
    lastSent DateTime @default(now())

    @@unique([email, token])
}

enum ContactTimePreference {
    MORNING
    AFTERNOON
    EVENING
}

model UserPreferences {
    id                    String                 @id @default(cuid())
    userId                String                 @unique
    emailNotifications    Boolean                @default(true)
    smsNotifications      Boolean                @default(false)
    pushNotifications     Boolean                @default(false)
    contactTimePreference ContactTimePreference?
    darkMode              Boolean                @default(false)
    language              String                 @default("en") // default language
    newsletterSubscribed  Boolean                @default(true) // subscription to newsletters

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
